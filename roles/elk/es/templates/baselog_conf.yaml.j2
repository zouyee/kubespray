apiVersion: v1
kind: ConfigMap
metadata:
    namespace: kube-system
    name: baselog-config
data:
    fluent.conf: |
        <source>
          @type tail
          format  json
          path /var/log/containers/*.log
          pos_file /var/log/containers/position.pos
          refresh_interval 2
          read_from_head true
          tag  log.*
          time_key time_field
        </source>

        <source>
          @type tail
          path /usr/local/openresty/nginx/logs/access.log
          pos_file /usr/local/openresty/nginx/logs/access.pos
          read_from_head true
          keep_time_key true
          format json
          time_key time_field
          tag nginx
        </source>

        <source>
          @type tcp
          tag etcd
          format json
          port 5000
          bind 0.0.0.0
        </source>

        <source>
          @type tcp
          tag kubelet
          format json
          port 5001
          bind 0.0.0.0
        </source>

        <filter kubelet>
          @type kubelet
        </filter>

        <filter etcd>
          @type etcd
        </filter>

        <filter nginx>
          @type nginx
        </filter>

        <filter log.**>
          @type record_transformer
          enable_ruby
          <record>
            logname     ${tag.split('.')[4]}
          </record>
        </filter>

        <filter {etcd,kubelet}>
           @type record_transformer
           remove_keys  __CURSOR,__REALTIME_TIMESTAMP,__MONOTONIC_TIMESTAMP,_BOOT_ID,_TRANSPORT,PRIORITY,SYSLOG_FACILITY,_UID,_GID,_CAP_EFFECTIVE,_SYSTEMD_SLICE,_MACHINE_ID,_HOSTNAME,SYSLOG_IDENTIFIER,_PID,_COMM,_EXE,_CMDLINE,_SYSTEMD_CGROUP,_SYSTEMD_UNIT
        </filter>

        <match log.**>
          @type copy
          <store>
              @type grep
              regexp1 logname ^kube
              remove_tag_prefix log
              add_tag_prefix component
          </store>
          <store>
              @type grep
              input_key logname
              exclude ^kube
              remove_tag_prefix log
              add_tag_prefix application
          </store>
        </match>

        <filter application.**>
           @type record_transformer
           enable_ruby
           <record>
             app        ${(record['logname'].split('_')[0].split('-')[-2]  =~ /\d{10}/)==0 ? record['logname'].split('_')[0].split('-')[0..-3].join("-"):record['logname'].split('_')[0].split('-')[0..-2].join("-")}
             namespace       ${record['logname'].split('_')[1]}
             pdname        ${record['logname'].split('_')[0]}
             timestamp      ${ (Time.now.to_f * 1000).to_i.to_s}
             logtime        ${Time.now.to_s}
             cluster        cluster-1
             host           #{Socket.gethostname}
           </record>
           remove_keys    logname,stream,time
        </filter>

        <filter component.**>
           @type record_transformer
           enable_ruby
           <record>
             message        ${record['log']}
             timestamp      ${ (Time.now.to_f * 1000).to_i.to_s }
             logtime        ${record['time']}
             host           #{Socket.gethostname}
             cluster        cluster-1
             component_name  ${record['logname'].split('-')[0]+'-'+record['logname'].split('-')[1]}
           </record>
           remove_keys    logname,log,time,stream
        </filter>

        <filter component.**>
        @type loglevel
        </filter>

        <match component.**>
             @type elasticsearch_dynamic
             flush_interval 5s
             hosts {% for item in es_nodes %}{% if not loop.last %}{{hostvars[item]['ip']}}:9200,{% else %}{{hostvars[item]['ip']}}:9200{{ "\n" }}{% endif %}{% endfor %}
             logstash_format true
             logstash_prefix k8s-kube
             logstash_dateformat %Y.%m
             type_name ${record['cluster']}
             remove_keys @timestamp
        </match>

        <match application.**>
          @type elasticsearch_dynamic
           flush_interval 5s
           hosts {% for item in es_nodes %}{% if not loop.last %}{{hostvars[item]['ip']}}:9200,{% else %}{{hostvars[item]['ip']}}:9200{{ "\n" }}{% endif %}{% endfor %}
           logstash_format true
           logstash_prefix k8s-application
           logstash_dateformat %Y.%m
           type_name ${record['cluster']}-${record['namespace']}
           remove_keys @timestamp
        </match>


        <match nginx>
             @type elasticsearch_dynamic
             flush_interval 5s
             hosts {% for item in es_nodes %}{% if not loop.last %}{{hostvars[item]['ip']}}:9200,{% else %}{{hostvars[item]['ip']}}:9200{{ "\n" }}{% endif %}{% endfor %}
             index_name k8s-audit
             type_name ${record['cluster']}-${record['namespace']}
             remove_keys @timestamp,method
        </match>


        <match {etcd,kubelet}>
         @type elasticsearch_dynamic
         flush_interval 5s
         hosts {% for item in es_nodes %}{% if not loop.last %}{{hostvars[item]['ip']}}:9200,{% else %}{{hostvars[item]['ip']}}:9200{{ "\n" }}{% endif %}{% endfor %}
         logstash_format true
         logstash_prefix k8s-kube
         logstash_dateformat %Y.%m
         type_name ${record['cluster']}
        </match>
