apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - image: quay.io/coreos/dex:v2.7.1
        imagePullPolicy: IfNotPresent
        name: dex
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]

        ports:
        - name: https
          containerPort: 5556

        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        - name: tls
          mountPath: /etc/dex/tls

      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        secret:
          secretName: {{secretName}}
      nodeSelector:
        kubernetes.io/hostname: {{groups['user_management'][0]}}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  namespace: kube-system
data:
  config.yaml: |
    issuer: https://{{hostvars[groups['kube-master'][0]]['ip']}}:32000
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      https: 0.0.0.0:5556
      tlsCert: /etc/dex/tls/tls.crt
      tlsKey: /etc/dex/tls/tls.key
    connectors:
    - type: ldap
      id: ldap
      name: ldap
      config:
        host: ldap-service.kube-system.svc.cluster.local:389
        insecureNoSSL: true
        bindDN: cn=admin,dc=cmss,dc=com
        bindPW: "{{ldap_password}}"
        userSearch:
          baseDN: ou=users,dc=cmss,dc=com
          filter: "(objectClass=inetOrgPerson)"
          username: cn
          idAttr: cn
          emailAttr: mail
          nameAttr: cn
        groupSearch:
          baseDN: ou=groups,dc=cmss,dc=com
          filter: "(objectClass=groupOfNames)"
          userAttr: DN
          groupAttr: member
          nameAttr: cn
    oauth2:
      skipApprovalScreen: true

    staticClients:
    - id: dex-app
      redirectURIs:
      - 'http://{{hostvars[groups['kube-master'][0]]['ip']}}:32002/callback'
      name: 'Dex App'
      secret: ZXhhbXBsZS1hcHAtc2VjcmV0

    enablePasswordDB: true
    staticPasswords:
    - email: "admin@example.com"
      # bcrypt hash of the string "password"
      hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
    nodeSelector:
      kubernetes.io/hostname: {{groups['user_management'][0]}}
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - name: dex
    port: 5556
    protocol: TCP
    targetPort: 5556
    nodePort: 32000
  selector:
    app: dex
